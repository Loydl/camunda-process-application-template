<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>ch.loydl.camunda</groupId>
    <artifactId>camunda-process-application-template</artifactId>
    <version>0.1.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Loydl::Camunda::Spring project template</name>
    <description>Spring-based process application</description>

    <modules>
        <module>process-api</module>
        <module>service-adapters</module>
        <module>process</module>
        <module>application</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <camunda.version>7.6.0</camunda.version>
        <spring.version>4.3.6.RELEASE</spring.version>
        <junit.version>4.12</junit.version>
        <assertj.version>3.6.2</assertj.version>
        <mockito.version>2.7.5</mockito.version>
        <h2.version>1.4.193</h2.version>
        <slf4j.version>1.7.22</slf4j.version>
        <logback.version>1.2.1</logback.version>
        <servlet-api.version>3.0.1</servlet-api.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- project internal modules -->
            <dependency>
                <groupId>ch.loydl.camunda</groupId>
                <artifactId>process-api</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.loydl.camunda</groupId>
                <artifactId>service-adapters</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.loydl.camunda</groupId>
                <artifactId>process</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- import all Camunda BPM dependencies with appropriate versions -->
            <dependency>
                <groupId>org.camunda.bpm</groupId>
                <artifactId>camunda-bom</artifactId>
                <version>${camunda.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
            <dependency>
                <groupId>org.camunda.bpm.dmn</groupId>
                <artifactId>camunda-engine-dmn-bom</artifactId>
                <version>${camunda.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <!-- do not package Camunda core libraries within WAR -->
            <dependency>
                <groupId>org.camunda.bpm</groupId>
                <artifactId>camunda-engine</artifactId>
                <version>${camunda.version}</version>
                <scope>provided</scope>
            </dependency>

            <dependency>
                <groupId>org.camunda.bpm.dmn</groupId>
                <artifactId>camunda-engine-dmn</artifactId>
                <version>${camunda.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- import all Spring dependencies with current version, overwriting outdated Camunda dependencies -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${spring.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- log against slf4j-api, implementation should be provided in application server -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- test environment -->
            <!-- test execution -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- fluid assertions -->
            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${assertj.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.camunda.bpm.extension</groupId>
                <artifactId>camunda-bpm-assert</artifactId>
                <version>1.2</version>
                <scope>test</scope>
            </dependency>

            <!-- mocking -->
            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${mockito.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- use in-memory database in component/integration tests -->
            <dependency>
                <groupId>com.h2database</groupId>
                <artifactId>h2</artifactId>
                <version>${h2.version}</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- provide configurable logging for tests -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.6.1</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.19.1</version>
                    <configuration>
                        <includes>
                            <include>**/*Test.java</include>
                        </includes>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>2.19.1</version>
                    <configuration>
                        <includes>
                            <include>**/*IT.java</include>
                        </includes>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>
</project>